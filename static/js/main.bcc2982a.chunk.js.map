{"version":3,"sources":["components/img/album.png","components/img/track.png","components/UserContext.js","components/Nav.js","schema.js","components/AuthBox.js","components/ReviewForm.js","components/SearchResults.js","components/SearchBox.js","components/Feed.js","App.js","index.js"],"names":["module","exports","UserContext","React","createContext","Nav","useContext","user","setUser","className","style","fontFamily","username","token","type","onClick","localStorage","removeItem","Joi","require","querySchema","string","trim","min","max","required","contentSchema","userSchema","object","alphanum","password","pattern","AuthBox","useState","displaySignUp","setDisplaySignUp","displayLogIn","setDisplayLogIn","validatedUserInput","setValidatedUserInput","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleFormSubmit","e","a","preventDefault","target","form","value","validate","undefined","error","item","message","includes","useEffect","fetch","API_URL","method","body","JSON","stringify","headers","then","response","ok","json","Error","catch","responseJson","setItem","role","id","htmlFor","aria-describedby","placeholder","ReviewForm","mediaName","mediaCreator","mediaType","content","setContent","display","reviewHeader","handleButtonClick","useCallback","input","reviewtext","href","rows","window","location","reload","SearchResults","searchResults","SearchBox","query","setQuery","setSearchResults","setMediaType","setMediaName","setMediaCreator","displaySearchForm","setDisplaySearchForm","displayResults","setDisplayResults","displayReviewForm","setDisplayReviewForm","handleSearchSubmit","dataset","medianame","mediacreator","createSearchResultsDisplay","jsonFromApi","data","length","map","data-medianame","title","data-mediacreator","artist","name","jsonFromMusicApi","onSubmit","onChange","defaultValue","Feed","feed","setFeed","reviews","reverse","index","created","imgSrc","track","album","key","src","width","height","alt","Date","toLocaleString","createFeed","hostname","App","getItem","userValue","useMemo","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcc2982a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/album.27544c82.png\";","module.exports = __webpack_public_path__ + \"static/media/track.91c3ee31.png\";","import React from 'react';\n\nconst UserContext = React.createContext(null);\n\nexport default UserContext;\n","import React, { useContext } from 'react';\nimport UserContext from './UserContext';\n\nfunction Nav() {\n  const { user, setUser } = useContext(UserContext);\n\n  // display a sign out button if a user is signed in\n  return (\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand px-3 justify-content-between\">\n      <h1 className=\"navbar-brand m-0\" style={{ fontFamily: 'Montserrat, sans-serif' }}>acchord</h1>\n      { user.username && user.token\n        && (\n        <button\n          type=\"button\"\n          className=\"btn btn-dark\"\n          onClick={() => {\n            setUser({ username: null, token: null });\n            localStorage.removeItem('acchordUsername');\n            localStorage.removeItem('token');\n          }}\n        >\n          Sign Out\n        </button>\n        )}\n    </nav>\n  );\n}\n\nexport default Nav;\n","const Joi = require('@hapi/joi');\n\nexport const querySchema = Joi.string()\n  .trim()\n  .min(1)\n  .max(50)\n  .required();\n\nexport const contentSchema = Joi.string()\n  .trim()\n  .min(1)\n  .max(1000)\n  .required();\n\nexport const userSchema = Joi.object({\n  username: Joi.string()\n    .alphanum()\n    .min(3)\n    .max(30)\n    .required(),\n\n  password: Joi.string()\n    .trim()\n    .min(8)\n    .max(20)\n    .pattern(/^[\\S]*$/)\n    .required(),\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from './UserContext';\nimport { userSchema } from '../schema';\nimport { API_URL } from '../App';\n\nfunction AuthBox() {\n  const { setUser } = useContext(UserContext);\n  const [displaySignUp, setDisplaySignUp] = useState(false);\n  const [displayLogIn, setDisplayLogIn] = useState(true);\n  const [validatedUserInput, setValidatedUserInput] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // store username and password if they are valid according to the schema,\n  // this will trigger useEffect()\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const username = e.target.form.username.value;\n      const password = e.target.form.password.value;\n      const { error } = await userSchema.validate({ username, password });\n\n      if (error === undefined) {\n        setValidatedUserInput({ username, password });\n        setErrorMessage('');\n      } else {\n        throw error;\n      }\n    } catch (error) {\n      const item = error.message.includes('username') ? 'username' : 'password';\n      const message = displaySignUp\n        ? `Please make sure your ${item} meets the requirements.`\n        : 'Error with username or password.';\n      setErrorMessage(message);\n    }\n  };\n\n  // POST user creds to appropriate path based on which form is displayed\n  useEffect(() => {\n    if (validatedUserInput && displaySignUp) {\n      fetch(`${API_URL}/auth/signup`, {\n        method: 'POST',\n        body: JSON.stringify(validatedUserInput),\n        headers: {\n          'content-type': 'application/json',\n        },\n      }).then((response) => {\n        if (response.ok) {\n          setValidatedUserInput(null);\n          setSuccessMessage('Account created! Please log in.');\n          setDisplaySignUp(false);\n          setDisplayLogIn(true);\n          return undefined;\n        }\n        return response.json().then((error) => {\n          throw new Error(error.message);\n        });\n      }).catch((error) => {\n        const message = error.message.includes('fetch')\n          ? 'Something went wrong! Please try again later.'\n          : error.message;\n        setErrorMessage(message);\n      });\n    } else if (validatedUserInput && displayLogIn) {\n      fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        body: JSON.stringify(validatedUserInput),\n        headers: {\n          'content-type': 'application/json',\n        },\n      }).then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response.json().then((error) => {\n          throw new Error(error.message);\n        });\n      }).then((responseJson) => {\n        localStorage.token = responseJson.token;\n        localStorage.setItem('acchordUsername', validatedUserInput.username);\n        setUser({\n          username: validatedUserInput.username,\n          token: responseJson.token,\n        });\n      }).catch((error) => {\n        const message = error.message.includes('fetch')\n          ? 'Something went wrong! Please try again later.'\n          : error.message;\n        setErrorMessage(message);\n      });\n    }\n  }, [validatedUserInput, displaySignUp, displayLogIn, setUser]);\n\n  return (\n    <div className=\"p-4 border border-dark rounded\">\n      { errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n      { successMessage && (\n        <div className=\"alert alert-success\" role=\"alert\">\n          {successMessage}\n        </div>\n      )}\n      {displaySignUp\n         && (\n         <form id=\"signUpForm\">\n           <h2>Sign Up</h2>\n           <div className=\"form-group\">\n             <label htmlFor=\"username\">Username</label>\n             <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter a username\" />\n             <small id=\"usernameHelp\" className=\"form-text text-muted\">Must be 3 to 20 characters. Only letters or numbers.</small>\n           </div>\n           <div className=\"form-group\">\n             <label htmlFor=\"password\">Password</label>\n             <input type=\"password\" className=\"form-control\" id=\"password\" aria-describedby=\"passwordHelp\" placeholder=\"Enter a password\" />\n             <small id=\"passwordHelp\" className=\"form-text text-muted\">Must be 8 to 20 characters. No spaces.</small>\n           </div>\n           <button type=\"submit\" form=\"signUpForm\" className=\"btn-sm btn-dark\" onClick={handleFormSubmit}>Sign Up</button>\n         </form>\n         )}\n      {displayLogIn\n          && (\n          <form id=\"logInForm\">\n            <h2>Log In</h2>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"username\" className=\"form-control\" id=\"username\" placeholder=\"Enter your username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter your password\" />\n            </div>\n            <button type=\"submit\" form=\"logInForm\" className=\"btn-sm btn-dark\" onClick={handleFormSubmit}>Log In</button>\n            <div className=\"w-100\" />\n            <button\n              type=\"button\"\n              className=\"btn btn-link text-muted px-0\"\n              onClick={(e) => {\n                e.preventDefault();\n                setDisplayLogIn(false);\n                setDisplaySignUp(true);\n              }}\n            >\n              Sign up for an account\n            </button>\n          </form>\n          )}\n    </div>\n  );\n}\n\nexport default AuthBox;\n","import React, {\n  useState, useCallback, useEffect, useContext,\n} from 'react';\nimport { contentSchema } from '../schema';\nimport UserContext from './UserContext';\nimport { API_URL } from '../App';\n\nfunction ReviewForm({ mediaName, mediaCreator, mediaType }) {\n  const { user } = useContext(UserContext);\n  const [content, setContent] = useState();\n  const [display, setDisplay] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const reviewHeader = `Reviewing ${mediaName} by ${mediaCreator}`;\n\n  // store the user's review if it is valid against the content schema,\n  // this will trigger useEffect()\n  const handleButtonClick = useCallback((e) => {\n    e.preventDefault();\n    const input = e.target.form.reviewtext.value;\n    const { error } = contentSchema.validate(input);\n\n    if (error === undefined) {\n      setContent(input);\n    } else {\n      const message = error.message.includes('1000')\n        ? 'Please shorten your review to 1000 characters or less.'\n        : 'Please check your review for errors.';\n      setErrorMessage(message);\n    }\n  }, [setContent]);\n\n  // disable posting for deployed app\n  // POST the user's review to the server\n  // useEffect(() => {\n  //   if (content) {\n  //     setDisplay(false);\n  //     setErrorMessage('');\n\n  //     fetch(`${API_URL}/api/reviews`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'content-type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         mediaType,\n  //         mediaName,\n  //         mediaCreator,\n  //         content,\n  //         token: user.token,\n  //       }),\n  //     })\n  //       .then((response) => {\n  //         if (response.ok) {\n  //           setSuccessMessage('Review submitted!');\n  //           setInterval(() => {\n  //             window.location.reload(false);\n  //           }, 1500);\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         const message = error.message.includes('fetch')\n  //           ? 'Unable to post review.'\n  //           : error.message;\n  //         setErrorMessage(message);\n  //       });\n  //   }\n  // }, [mediaCreator, mediaName, mediaType, content, user.token]);\n\n  useEffect(() => {\n    if (content) {\n      setErrorMessage(\n        <p className=\"mb-0\">\n          Posting has been disabled! Instead, please see\n          {' '}\n          <a href=\"https://github.com/mbuccat/acchord\">the code repository</a>\n          {' '}\n          for a demo.\n        </p>,\n      );\n    }\n  }, [content]);\n\n  return (\n    <div className=\"col-sm-12 p-4 border border-dark rounded\">\n      {successMessage && <div className=\"alert alert-success mb-0\">{successMessage}</div>}\n      {errorMessage && <div className=\"alert alert-danger mb-0\">{errorMessage}</div>}\n      { display && (\n        <div className=\"ReviewForm\">\n          <h2>\n            {reviewHeader}\n          </h2>\n          <form id=\"review-form\">\n            <textarea\n              className=\"form-control mb-1\"\n              id=\"reviewtext\"\n              rows=\"3\"\n              placeholder=\"Your review\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-danger mr-1\"\n              onClick={(e) => {\n                e.preventDefault();\n                window.location.reload(false);\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              form=\"review-form\"\n              className=\"btn btn-dark\"\n              onClick={handleButtonClick}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ReviewForm;\n","import React from 'react';\n\nfunction SearchResults({ searchResults }) {\n  return (\n    <div className=\"col-sm-12 p-4 border border-dark rounded\">\n      <ul className=\"list-group list-unstyled\">\n        <h2>Did you mean:</h2>\n        {searchResults}\n      </ul>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={(e) => {\n          e.preventDefault();\n          window.location.reload(false);\n        }}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default SearchResults;\n","import React, {\n  useState, useCallback, useEffect, useContext,\n} from 'react';\nimport ReviewForm from './ReviewForm';\nimport SearchResults from './SearchResults';\nimport { querySchema } from '../schema';\nimport UserContext from './UserContext';\nimport { API_URL } from '../App';\n\nfunction SearchBox() {\n  const { user } = useContext(UserContext);\n  const [query, setQuery] = useState();\n  const [searchResults, setSearchResults] = useState('Searching...');\n  const [mediaType, setMediaType] = useState('track');\n  const [mediaName, setMediaName] = useState('default');\n  const [mediaCreator, setMediaCreator] = useState('default');\n  const [displaySearchForm, setDisplaySearchForm] = useState(true);\n  const [displayResults, setDisplayResults] = useState(false);\n  const [displayReviewForm, setDisplayReviewForm] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // store whether the user wants to search for a song or album\n  function handleMediaTypeChange(e) {\n    setMediaType(e.target.value);\n  }\n\n  // store the user's query if it is valid against the query schema,\n  // this will trigger useEffect()\n  const handleSearchSubmit = useCallback((e) => {\n    e.preventDefault();\n    const input = e.target.query.value;\n    const { error } = querySchema.validate(input);\n\n    if (error === undefined) {\n      setQuery(input);\n    } else {\n      const message = error.message.includes('50')\n        ? 'Please shorten your query.'\n        : 'Please check your query.';\n      setErrorMessage(message);\n    }\n  }, [setQuery]);\n\n  // when the user selects a song or album from the search results,\n  // display a blank review form for that item\n  const handleButtonClick = useCallback((e) => {\n    e.preventDefault();\n    setMediaName(e.target.dataset.medianame);\n    setMediaCreator(e.target.dataset.mediacreator);\n    setDisplayResults(false);\n    setDisplayReviewForm(true);\n  }, [setMediaName, setMediaCreator]);\n\n  // create a button for each search result item,\n  // so the user can select which item they want to review,\n  // the list of buttons will be passed to the SearchResults component\n  const createSearchResultsDisplay = useCallback((jsonFromApi) => {\n    const { data } = jsonFromApi;\n\n    if (data.length === 0) {\n      setSearchResults((<div className=\"alert alert-danger\">No matches found.</div>));\n    } else {\n      setSearchResults(data.map((item) => (\n        <li>\n          <button\n            type=\"button\"\n            className=\"btn btn-light mb-2 btn-sm w-100 text-left\"\n            onClick={handleButtonClick}\n            data-medianame={item.title}\n            data-mediacreator={item.artist.name}\n          >\n            {item.title}\n            {' '}\n            by\n            {' '}\n            {item.artist.name}\n          </button>\n        </li>\n      )));\n    }\n  }, [setSearchResults, handleButtonClick]);\n\n  // when the user makes a search query, send to server\n  useEffect(() => {\n    if (query) {\n      setDisplaySearchForm(false);\n      setDisplayResults(true);\n      setErrorMessage('');\n\n      fetch(`${API_URL}/api/search`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({ query, mediaType, token: user.token }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          return response.json().then((error) => {\n            throw new Error(error.message);\n          });\n        })\n        .then((responseJson) => createSearchResultsDisplay(responseJson.jsonFromMusicApi))\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    }\n  }, [query, mediaType, createSearchResultsDisplay, user.token]);\n\n  return (\n    (\n      <div>\n        { displaySearchForm\n            && (\n            <div className=\"p-4 border border-dark rounded\">\n              {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n              <form onSubmit={handleSearchSubmit}>\n                <h2>I want to review:</h2>\n                <div className=\"w-100\" />\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <select className=\"custom-select\" onChange={handleMediaTypeChange}>\n                      <option defaultValue value=\"track\">a track</option>\n                      <option value=\"album\">an album</option>\n                    </select>\n                  </div>\n                  <input\n                    type=\"string\"\n                    className=\"form-control\"\n                    name=\"query\"\n                    placeholder={`Which ${mediaType}?`}\n                  />\n                </div>\n              </form>\n            </div>\n            )}\n        {displayResults && <SearchResults searchResults={searchResults} />}\n        {displayReviewForm\n          && <ReviewForm mediaName={mediaName} mediaCreator={mediaCreator} mediaType={mediaType} />}\n      </div>\n    )\n  );\n}\n\nexport default SearchBox;\n","import React, { useState, useEffect } from 'react';\nimport album from './img/album.png';\nimport track from './img/track.png';\nimport { API_URL } from '../App';\n\nfunction Feed() {\n  const [feed, setFeed] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // for each review, create an li\n  // and set the feed state variable to an array of these li elements\n  const createFeed = (reviews) => {\n    setFeed(\n      reviews.reverse().map(({\n        content, created, mediaCreator, mediaName, mediaType,\n      }, index) => {\n        const reviewHeader = `${mediaName} by ${mediaCreator}`;\n        const imgSrc = mediaType === 'track' ? track : album;\n\n        return (\n          <li className=\"media mb-5\" key={index}>\n            <img className=\"mr-3\" src={imgSrc} width=\"50\" height=\"50\" alt=\"media type icon\" />\n            <div className=\"media-body\">\n              <h5 className=\"mt-0 mb-1\">{reviewHeader}</h5>\n              {content}\n              {' '}\n              <br />\n              <small>{(new Date(created)).toLocaleString()}</small>\n            </div>\n          </li>\n        );\n      }),\n    );\n  };\n\n  // GET the music reviews from the server\n  useEffect(() => {\n    fetch(`${API_URL}/api/reviews`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request failed!');\n      })\n      .then((responseJson) => {\n        const { reviews } = responseJson;\n        createFeed(reviews);\n      })\n      .catch(() => {\n        setErrorMessage('Unable to load reviews. You may be making too many requests.');\n      });\n  }, []);\n\n  return (\n    <div className=\"p-4 border border-dark rounded\">\n      <h2 className=\"mb-4\">Recent reviews</h2>\n      {errorMessage && <div className=\"alert alert-danger mb-0\">{errorMessage}</div>}\n      <ul className=\"list-unstyled\">\n        {feed}\n      </ul>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, {\n  useState, useMemo, useEffect,\n} from 'react';\nimport Nav from './components/Nav';\nimport AuthBox from './components/AuthBox';\nimport SearchBox from './components/SearchBox';\nimport Feed from './components/Feed';\nimport UserContext from './components/UserContext';\n\nconst API_URL = window.location.hostname === 'localhost'\n  ? 'http://localhost:3001'\n  : 'https://acchord.herokuapp.com';\n\nfunction App() {\n  const [user, setUser] = useState({\n    username: localStorage.getItem('acchordUsername'),\n    token: localStorage.getItem('token'),\n  });\n  const userValue = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  // verify token,\n  // clear localStorage if the token is not from the server\n  useEffect(() => {\n    if (user.token) {\n      fetch(`${API_URL}/auth/token`, {\n        method: 'POST',\n        body: JSON.stringify({ token: user.token }),\n        headers: {\n          'content-type': 'application/json',\n        },\n      })\n        .then((response) => {\n          if (response.ok) {\n            return undefined;\n          }\n          throw new Error('Unable to verify token.');\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('acchordUsername');\n          setUser({ username: null, token: null });\n        });\n    }\n  }, [user.token, setUser]);\n\n  // display welcome message and search/review form if user is signed in\n  return (\n    <div className=\"App container-fluid p-0 m-0\">\n      <UserContext.Provider value={userValue}>\n        <Nav />\n        {user.username\n          ? (\n            <div className=\"row px-4 mt-3\">\n              <div className=\"Welcome col-sm-12\">\n                <h1 className=\"mb-0\">\n                  Welcome,\n                  {' '}\n                  {user.username}\n                  .\n                </h1>\n              </div>\n            </div>\n          )\n          : <div />}\n        <div className=\"row justify-content-center px-4 py-0\">\n          <div className=\"col-12 order-12 col-lg-8 order-lg-1 pt-3\">\n            <Feed />\n          </div>\n          <div className=\"col-12 order-1 col-lg-4 order-lg-12 pt-3\">\n            {!user.username && !user.token && <AuthBox />}\n            {user.username && user.token && <SearchBox />}\n          </div>\n        </div>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport { App, API_URL };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}